
path: data/cam_2.mp4  # path to the video to load
device: cuda
video_config:
  start: 0  # first frame to start detect
  end: null  # last frame to end processing. if null then runs to the end of the video
  batch_size: 1  # batch size to run in model. Probably improces throughput at the cost of latency 
  skip: 0  # if skip=3, then it runs model in nth fram, skips n+1,n+2,n+3 frames and runs on n+4 frame

model:
  _target_: src.models.DEIMDetector
  model_name: deim_hgnetv2_x  # also possible (deim_hgnetv2_n, deim_hgnetv2_s, deim_hgnetv2_m, deim_hgnetv2_l, deim_hgnetv2_x)
  image_size: ${size2d:640,640}  # size of the frame that model natively processes
  threshold: 0.5 # score threshold. filters out all detections with confidence less than this theshold
  device: ${device}  # Usually "cuda" or "cpu"

dst: data/detections.parquet  # dst path to save dections
